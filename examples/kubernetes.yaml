apiVersion: v1
kind: Secret
metadata:
 name: success-secrets
type: Opaque
stringData:
 open-ai-api-key: {{open-ai-api-key}}
 postgres-password: {{password}}
 secret-key: {{secret-key}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: success-frontend
  labels:
    app: success-frontend
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: success-frontend
  template:
    metadata:
      labels:
        app: success-frontend
    spec:
      containers:
        - name: webserver
          image: ghcr.io/mbseid/success-frontend:main
          imagePullPolicy: Always
          env:
            - name: API_HOST
              value: "http://success-backend:8000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: success-backend
  labels:
    app: success-backend
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: success-backend
  template:
    metadata:
      labels:
        app: success-backend
    spec:
      containers:
        - name: webserver
          image: ghcr.io/mbseid/success-backend:main
          imagePullPolicy: Always
          env:
            - name: POSTGRES_NAME
              value: 'success'
            - name: POSTGRES_USER
              value: 'success'
            - name: POSTGRES_HOST
              value: 'postgres'
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: success-secrets
                  key: postgres-password
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: success-secrets
                  key: secret-key
            - name: DJANGO_ALLOWED_HOSTS
              value: "success-backend"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: success-secrets
                  key: open-ai-api-key
---
kind: Service
apiVersion: v1
metadata:
  name: success-frontend
spec:
  selector:
    app: success-frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      name: web
---
kind: Service
apiVersion: v1
metadata:
  name: success-backend
spec:
  selector:
    app: success-backend
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      name: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: "docker.io/postgres:15.4"
        resources:
          requests:
            cpu: 4
            memory: 4096Mi
        ports:
          - containerPort: 5432  # Exposes container port
        envFrom:
          - configMapRef:
              name: postgres-config
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgredb
            subPath: postgres
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
  labels:
    app: postgres
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: success-daily-email
  labels:
    app: success-daily-email
spec:
  schedule: "0 7 * * *"  # Run daily at 7:00 AM UTC
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: daily-email
            image: ghcr.io/mbseid/success-backend:main
            imagePullPolicy: Always
            command:
            - python
            - manage.py
            - send_daily_calendar_email
            env:
              - name: POSTGRES_NAME
                value: 'success'
              - name: POSTGRES_USER
                value: 'success'
              - name: POSTGRES_HOST
                value: 'postgres'
              - name: POSTGRES_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: success-secrets
                    key: postgres-password
              - name: SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: success-secrets
                    key: secret-key
              - name: OPENAI_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: success-secrets
                    key: open-ai-api-key
          restartPolicy: OnFailure
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1